; Code from the modes package (refactored)
; See also Pfister et al. 2013
; https://www.frontiersin.org/journals/psychology/articles/10.3389/fpsyg.2013.00700/full


;; R rnorm function for testing...
to-report rnorm [n m s]
  let idx 0
  let x []
  while [idx < n]
  [
    set x lput (random-normal m s) x
    set idx idx + 1
  ]
  report x
end

;; the bimodality coefficient
to-report bimodality-coeff [x finite]

  let B 0
  show finite
  
  ifelse finite = TRUE
  [
		let G (skewness x TRUE)
		let sample_excess_kurtosis (kurtosis x TRUE)
		let K sample_excess_kurtosis
		let n length(x)
		set B ((G ^ 2) + 1) / (K + ((3 * ((n - 1) ^ 2)) / ((n - 2) * (n - 3))))
  ]
  [
		let G (skewness x FALSE)
		let K  (kurtosis x FALSE)
		set B  ((G ^ 2) + 1) / (K)
  ]
	
  report B
end


;; skewness
to-report skewness [x finite]

  let n length x
  let mean-x mean x

  let diff map [i -> i - mean-x] x
  let diff-sq map[i -> i ^ 2] diff
  let diff-cube map[i -> i ^ 3] diff

  let S ((1 / n) * sum(diff-cube))  / ((1 / n) * sum(diff-sq)) ^ 1.5
  
  ;; finite correction
  if finite [set S S * (sqrt(n * (n - 1)))/(n - 2)]

  report S

end

;; kurtosis
to-report kurtosis [x finite]

  let n length x
  let mean-x mean x

  let diff map [i -> i - mean-x] x
  let diff-sq map[i -> i ^ 2] diff
  let diff-qu map[i -> i ^ 4] diff


  let K ((1 / n) * sum(diff-qu)) / ( ((1 / n) * sum(diff-sq)) ^ 2) - 3

  ;; finite correction
  if finite
  [
    set	K ((n - 1) * ((n + 1)* K - 3 * (n - 1)) / ((n - 2) * (n - 3))) + 3
  ]

  report K


end

;skewness <- function(x, finite = TRUE, ...) {
;	n <- length(x)
;	S <- (1 / n) * sum((x - mean(x))^3) / (((1 / n) * sum((x - mean(x)) ^2)) ^ 1.5)
;	if (finite == FALSE) {
;		S <- S
;	} else {
;		S <- S * (sqrt(n * (n - 1)))/(n - 2)
;		}
;	
;    return(S)
;}
;
;
;kurtosis <- function(x, finite){
;	n <- length(x)
; K <- (1 / n) * sum((x - mean(x))^4) / (((1 / n) * sum((x - mean(x))^2))^2) - 3
;	if(finite == FALSE) {
;		K <- K
;	} else {
;		K <- ((n - 1) * ((n + 1)* K - 3 * (n - 1)) / ((n - 2) * (n - 3))) + 3
;	}
;	
;    return(K)	
;}


;
;bimodality_coefficient <- function(x, finite = TRUE,...){
;
;    if (finite == TRUE) {
;		G <- skewness(x, finite)
;		sample_excess_kurtosis <- kurtosis(x, finite)
;		K <- sample_excess_kurtosis
;		n <- length(x)
;		B <- ((G^2) + 1) / (K + ((3 * ((n - 1)^2)) / ((n - 2) * (n - 3))))
;	}
;	else {
;		G <- skewness(x, FALSE)
;		K <- kurtosis(x, FALSE)
;		B <- ((G^2) + 1) / (K)
;	}
;	
;    return(B)
;}
;
;
